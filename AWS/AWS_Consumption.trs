#####################################################################
#
# Example Transformer for AWS Consumption
#
# Ensure to provide the correct LinkedAccountId with the import
#
#####################################################################

option loglevel = DEBUGX
# import customer names from csv
import "system\extracted\aws\000000000000-aws-billing-detailed-line-items-with-resources-and-tags-${dataYear}-${dataMonth}.csv.zip.csv" source aws alias consumption

# Set timestamp
var template = YYYY.MM.DD
timestamp START_DATE using UsageStartDate template ${template} format yyyymmdd
timestamp END_DATE using UsageEndDate template ${template} format yyyymmdd
timecolumns START_DATE END_DATE

# Delete rows that are not "today"
where ( [START_DATE] != ${dataDate} ) {
  delete row
}

# Change Reserved Instance Y or N to Reserved or On Demand
where ([ReservedInstance] == "N") {
  set ReservedInstance to "On Demand"
}
where ([ReservedInstance] == "Y") {
  set ReservedInstance to "Reserved"
}

# set standard values
option overwrite = NO
set ResourceId to "Generic Consumption Record"
create column interval value individually
create column Units value "Units"

# create service names and key's
# get non small box type services
create mergedcolumn box_type from ItemDescription /.*On Demand (.*) [a-z][0-9]\..*/

create column service_opp
where ( [AvailabilityZone] == :EMPTY: ) {
    set service_opp as Operation
    replace "None" in service_opp
    replace "Unknown" in service_opp
    replace "EBS:" in service_opp
    replace "Not Applicable" in service_opp
}

create mergedcolumn service_name separator " " from ReservedInstance UsageType box_type AvailabilityZone service_opp
replace "On Demand " in service_name
replace " HeavyUsage" in service_name
create mergedcolumn service_key separator " - " from ReservedInstance UsageType box_type Operation AvailabilityZone RateId

delete columns service_opp

# Remove records without costs 
# This can be removed, when you're interested in consumption rather then costs
where ( [Rate] == 0 ) {
  delete rows
}

export aws.consumption as "${dataDate}_aws_consumption_export.csv"

finish

services {
  effective_date = 20180101
  service_type = automatic
  description_col = service_name # column name
  category_col = ProductName # column with category value
  instance_col = ResourceId # the unique instance i.e. vm-id, username, etc
  usages_col = service_key # the column containing the name of the consumed service
  rate_col = Rate # the column containing the rate values
  # cogs_col = BlendedRate # the column containing the CoG rate values
  interval_col  = interval # the column containing the interval (i.e. individually)
  unit_label_col = Units # the column containing the unit label
  consumption_col = UsageQuantity # the column containing the consumed quantity
}
